CREATE OR REPLACE 
PROCEDURE Admin_Insert(Bname in VARCHAR2) AS
brands_id NUMBER;
max_id NUMBER;
BEGIN
SELECT Brand_id into brands_id from BRANDS WHERE Brand_Name = Bname;
If brands_id <> NULL THEN
dbms_output.put_line('EXISTS');
ELSE
dbms_output.put_line('Not EXISTS');
SELECT MAX(Brand_id) into max_id from BRANDS;
brands_id := max_id + 1;
INSERT INTO BRANDS VALUES(brands_id,Bname);
end if;
END;

#INSERT IN BRANDS TABLE

CREATE OR REPLACE TRIGGER IBRAND AFTER INSERT ON "GADGET_STORE"."PRODUCTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
DECLARE
max_id NUMBER;
BRID NUMBER;
BNAME VARCHAR2(255);
BR VARCHAR2(255);
OLDID NUMBER;
BEGIN
SELECT MAX(Brand_id) into max_id from BRANDS;
BRID := max_id + 1;
INSERT INTO BRANDS VALUES(BRID, :NEW.PRODUCT_BRAND);
END;
/

#INSERT IN CATEGORY TABLE

CREATE OR REPLACE TRIGGER ICATEGORY AFTER INSERT ON "GADGET_STORE"."PRODUCTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
DECLARE
max_id NUMBER;
CATID NUMBER;
CAT VARCHAR2(255);
CATNAME VARCHAR2(255);
OLDID NUMBER;
BEGIN
SELECT MAX(Category_id) into max_id from "CATEGORY";
CATID := max_id + 1;
INSERT INTO "CATEGORY" VALUES(CATID, :NEW.PRODUCT_CATEGORY);
END;
/ 

CREATE TABLE "GADGET_STORE"."NewTable" (
"SERIAL_NO" NUMBER NOT NULL ,
"ORDER_ID" NUMBER NOT NULL ,
"CUSTOMER_ID" NUMBER NOT NULL ,
"USER_NAME" VARCHAR2(255 BYTE) NOT NULL ,
"EMAIL" VARCHAR2(255 BYTE) NOT NULL ,
"PAYMENT_TYPE" VARCHAR2(255 BYTE) NOT NULL ,
"ADDRESS" VARCHAR2(255 BYTE) NOT NULL ,
"DATE" DATE NOT NULL ,
"PRODUCT_ID" NUMBER NOT NULL ,
"PRODUCT_NAME" VARCHAR2(255 BYTE) NOT NULL ,
"BRAND" VARCHAR2(255 BYTE) NOT NULL ,
"MODEL" NUMBER NOT NULL ,
"CATEGORY" VARCHAR2(255 BYTE) NOT NULL ,
"QUANTITY" NUMBER NOT NULL ,
"COST" NUMBER NOT NULL ,
"TOTAL_COST" NUMBER NOT NULL ,
PRIMARY KEY ("SERIAL_NO")
)
PCTFREE 10
INITRANS 1
STORAGE (
	INITIAL 65536 
	MINEXTENTS 1
	MAXEXTENTS 2147483645
	BUFFER_POOL DEFAULT
)

TABLESPACE "USERS"
LOGGING
NOCOMPRESS
NOCACHE
;

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("SERIAL_NO" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("ORDER_ID" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("CUSTOMER_ID" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("USER_NAME" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("EMAIL" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("PAYMENT_TYPE" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("ADDRESS" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("DATE" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("PRODUCT_ID" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("PRODUCT_NAME" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("BRAND" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("MODEL" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("CATEGORY" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("QUANTITY" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("COST" IS NOT NULL);

ALTER TABLE "GADGET_STORE"."NewTable" ADD CHECK ("TOTAL_COST" IS NOT NULL);

           